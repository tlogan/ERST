# THIS FILE IS AUTOGENERATED
# CHANGES MAY BE LOST

from core import language_system
from typing import TypeVar, Optional
from core.abstract_token_system import Grammar, Vocab

D = TypeVar('D')
U = TypeVar('U')




class SemanticsBase(language_system.Semantics[D,U]):

    def combine_up_Typ_Var_(self, name : U) -> Optional[D]:
        raise Exception("not yet implemented") 
        

    def analyze_terminal_Typ_Var_name(self, context : D, vocab : Vocab) -> U:
        raise Exception("not yet implemented") 
                

    def combine_up_Typ_Exis_(self, body : U, qualifiers : U, indicies : U) -> Optional[D]:
        raise Exception("not yet implemented") 
        

    def guide_down_Typ_Exis_body(self, context : D, gram : Grammar) -> Optional[D]:
        raise Exception("not yet implemented") 
                

    def guide_down_Typ_Exis_qualifiers(self, context : D, body : U, gram : Grammar) -> Optional[D]:
        raise Exception("not yet implemented") 
                

    def guide_down_Typ_Exis_indicies(self, context : D, body : U, qualifiers : U, gram : Grammar) -> Optional[D]:
        raise Exception("not yet implemented") 
                
    