
<<<<<<<<
*** program ***
let unit : <extra_id_0> = @ ;
let true : <extra_id_1> = ~true @ ;
let false : <extra_id_2> = ~false @ ;
let zero : <extra_id_3> = ~zero @ ;
let one : <extra_id_4> = ~succ ~zero @ ;
let two : <extra_id_5> = ~succ ~succ ~zero @ ;
@

*** context ***
<<TODO>>

*** annotations ***
<extra_id_4> ~succ ~zero @
<extra_id_0> @
<extra_id_5> ~succ ~succ ~zero @
<extra_id_3> ~zero @
<extra_id_1> ~true @
<extra_id_2> ~false @

>>>>>>>>
    

<<<<<<<<
*** program ***
let length : <extra_id_0> = fix(case self => (
    case ~nil @ => ~zero @ 
    case ~cons (x, xs) => ~succ (self(xs)) 
)) ;
@

*** context ***
<<TODO>>

*** annotations ***
<extra_id_0> (ALL [G21 ; G21 <: (LFP G20 (~nil @ | (EXI [G8 G9 ; G9 <: G20] ~cons (G8, G9))))] (G21 -> (EXI [G22 ; (G21, G22) <: (LFP G20 ((~nil @, ~zero @) | (EXI [G8 G9 G16 ; (G9, G16) <: G20] (~cons (G8, G9), ~succ G16))))] G22)))

>>>>>>>>
    

<<<<<<<<
*** program ***
let length : <extra_id_0> = fix(case self => (
    case ~nil @ => ~zero @ 
    case ~cons (x, xs) => ~succ (self(xs)) 
)) ;
let maybe_with_length : <extra_id_1> = (case (b, l) => (
    (if b then
        ((length)(l), l)
    else
        l
    )
)) ;
@

*** context ***
<<TODO>>

*** annotations ***
<extra_id_0> (ALL [G21 ; G21 <: (LFP G20 (~nil @ | (EXI [G8 G9 ; G9 <: G20] ~cons (G8, G9))))] (G21 -> (EXI [G22 ; (G21, G22) <: (LFP G20 ((~nil @, ~zero @) | (EXI [G8 G9 G16 ; (G9, G16) <: G20] (~cons (G8, G9), ~succ G16))))] G22)))
<extra_id_1> (ALL [G26 G38] ((ALL [G44 ; G44 <: G26 ; (G44, G38) <: (LFP G20 ((~nil @, ~zero @) | (EXI [G8 G9 G16 ; (G9, G16) <: G20] (~cons (G8, G9), ~succ G16))))] ((~true @, G44) -> (G38, G44))) & (ALL [G43 ; G43 <: G26] ((~false @, G43) -> G43))))

>>>>>>>>
    

<<<<<<<<
*** program ***
let f : <extra_id_0> = (case (_.uno = x) => x) ;
let g : <extra_id_1> = (case (_.dos = x) => x) ;
let make_pair : <extra_id_2> = case x => (
    ((f)(x), (g)(x))
) ;
@

*** context ***
<<TODO>>

*** annotations ***
<extra_id_0> (ALL [G5 G3 G1 G6 T1 G7 G2 G9 T2 ; G5 <: T1 ; ((dos : G7 & uno : G3) -> (G3, G7)) <: G9 ; ((dos : G7 & uno : G3) -> (G3, G7)) <: T2 ; (G6 | (dos : G7 -> G7)) <: T1 ; G9 <: T2] (G1 | ((uno : G3 -> G3) | G2)))
<extra_id_1> (ALL [G3 G1 G5 G6 G7 G2 G9 T0 T2 ; ((dos : G7 & uno : G3) -> (G3, G7)) <: G9 ; G1 <: T0 ; ((uno : G3 -> G3) | G2) <: T0 ; ((dos : G7 & uno : G3) -> (G3, G7)) <: T2 ; G9 <: T2] (G5 | (G6 | (dos : G7 -> G7))))
<extra_id_2> (ALL [G5 G1 G3 G6 T1 G2 G7 T0 ; G5 <: T1 ; G1 <: T0 ; ((uno : G3 -> G3) | G2) <: T0 ; (G6 | (dos : G7 -> G7)) <: T1] ((dos : G7 & uno : G3) -> (G3, G7)))

>>>>>>>>
    

<<<<<<<<
*** program ***
let add : <extra_id_0> = fix (case self => ( 
    case (~zero @, n) => n 
    case (~succ m, n) => ~succ (self(m, n))
)) ;
@

*** context ***
<<TODO>>

*** annotations ***
<extra_id_0> (ALL [G27 ; G27 <: (LFP G24 ((EXI [G23 G6] (~zero @, (G6 & G23))) | (EXI [G8 G9 ; (G8, G9) <: G24] (~succ G8, G9))))] (G27 -> (EXI [G28 ; (G27, G28) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] G28)))

>>>>>>>>
    

<<<<<<<<
*** program ***
let lte : <extra_id_0> = fix(case self => (
    case (~zero @, n) => ~true @ 
    case (~succ m, ~succ n) => self(m,n) 
    case (~succ m, ~zero @) => ~false @ 
)) ;
let max : <extra_id_1> = case (x, y) => (
    if (lte)(x, y) then
        y
    else
        x
) ;
@

*** context ***
<<TODO>>

*** annotations ***
<extra_id_0> (ALL [G31 ; G31 <: (LFP G27 ((EXI [G6] (~zero @, G6)) | ((EXI [G9 G10 ; (G9, G10) <: G27] (~succ G9, ~succ G10)) | (EXI [G18] (~succ G18, ~zero @)))))] (G31 -> (EXI [G32 ; (G31, G32) <: (LFP G27 ((EXI [G6] ((~zero @, G6), ~true @)) | ((EXI [G17 G9 G10 ; ((G9, G10), G17) <: G27] ((~succ G9, ~succ G10), G17)) | (EXI [G18] ((~succ G18, ~zero @), ~false @)))))] G32)))
<extra_id_1> (ALL [G35 G43 G34 G45] ((ALL [G52 G53 ; G52 <: G35 ; G53 <: G34 ; ((G53, G52), G45) <: (LFP G27 ((EXI [G6] ((~zero @, G6), ~true @)) | ((EXI [G17 G9 G10 ; ((G9, G10), G17) <: G27] ((~succ G9, ~succ G10), G17)) | (EXI [G18] ((~succ G18, ~zero @), ~false @))))) ; G43 <: ~true @ ; G45 <: G43] ((G53, G52) -> G52)) & (ALL [G50 G51 ; G50 <: G35 ; G51 <: G34 ; ((G51, G50), G45) <: (LFP G27 ((EXI [G6] ((~zero @, G6), ~true @)) | ((EXI [G17 G9 G10 ; ((G9, G10), G17) <: G27] ((~succ G9, ~succ G10), G17)) | (EXI [G18] ((~succ G18, ~zero @), ~false @))))) ; G43 <: ~false @ ; G45 <: G43] ((G51, G50) -> G51))))

>>>>>>>>
    

<<<<<<<<
*** program ***
let add : <extra_id_0> = fix (case self => ( 
    case (~zero @, n) => n 
    case (~succ m, n) => ~succ (self(m, n))
)) ;
let plus : <extra_id_1> = add ;
let mult : <extra_id_2> = fix (case self => ( 
    case (~zero @, n) => ~zero 
    case (~succ m, n) => (add)(n, (self)(m, n))
)) ;
let times : <extra_id_3> = fix (case self => ( 
    case (~zero @, n) => ~zero 
    case (~succ m, n) => (plus)(n, (self)(m, n))
)) ;
@

*** context ***
<<TODO>>

*** annotations ***
<extra_id_3> (ALL [G67 G1 G68 G78 G79 T1 G60 T0 G29 G64 ; (ALL [G27 ; G27 <: (LFP G24 ((EXI [G23 G6] (~zero @, (G6 & G23))) | (EXI [G8 G9 ; (G8, G9) <: G24] (~succ G8, G9))))] (G27 -> (EXI [G28 ; (G27, G28) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] G28))) <: T0 ; (G1 | (ALL [G27 ; G27 <: (LFP G24 ((EXI [G23 G6] (~zero @, (G6 & G23))) | (EXI [G8 G9 ; (G8, G9) <: G24] (~succ G8, G9))))] (G27 -> (EXI [G28 ; (G27, G28) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] G28)))) <: T1 ; G1 <: T0 ; G29 <: T1 ; G1 <: ((G68, G78) -> G79)] (EXI [G81 ; ((G68, G78), G81) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18)))) ; (((G67, G68) -> G78) -> ((~zero @, G64) -> ~zero ((~succ G67, G68) -> G81))) <: G60] (ALL [G86 ; G86 <: (LFP G85 (EXI [G64 ; ((G68, G78), G81) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18)))) ; (ALL [G27 ; G27 <: (LFP G24 ((EXI [G23 G6] (~zero @, (G6 & G23))) | (EXI [G8 G9 ; (G8, G9) <: G24] (~succ G8, G9))))] (G27 -> (EXI [G28 ; (G27, G28) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] G28))) <: T0 ; (G1 | (ALL [G27 ; G27 <: (LFP G24 ((EXI [G23 G6] (~zero @, (G6 & G23))) | (EXI [G8 G9 ; (G8, G9) <: G24] (~succ G8, G9))))] (G27 -> (EXI [G28 ; (G27, G28) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] G28)))) <: T1 ; G1 <: T0 ; G29 <: T1 ; (G67, G68) <: G85 ; G1 <: ((G68, G78) -> G79)] (~zero @, G64)))] (G86 -> (EXI [G87 ; (G86, G87) <: (LFP G85 (EXI [G67 G68 G81 G64 ; ((G67, G68), G78) <: G85 ; ((G68, G78), G81) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18)))) ; (ALL [G27 ; G27 <: (LFP G24 ((EXI [G23 G6] (~zero @, (G6 & G23))) | (EXI [G8 G9 ; (G8, G9) <: G24] (~succ G8, G9))))] (G27 -> (EXI [G28 ; (G27, G28) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] G28))) <: T0 ; (G1 | (ALL [G27 ; G27 <: (LFP G24 ((EXI [G23 G6] (~zero @, (G6 & G23))) | (EXI [G8 G9 ; (G8, G9) <: G24] (~succ G8, G9))))] (G27 -> (EXI [G28 ; (G27, G28) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] G28)))) <: T1 ; G1 <: T0 ; G29 <: T1 ; G1 <: ((G68, G78) -> G79)] ((~zero @, G64), ~zero ((~succ G67, G68) -> G81))))] G87)))))
<extra_id_1> (ALL [G67 G1 G59 G68 G78 G79 T3 T1 G60 T0 G29 G64 ; (ALL [G27 ; G27 <: (LFP G24 ((EXI [G23 G6] (~zero @, (G6 & G23))) | (EXI [G8 G9 ; (G8, G9) <: G24] (~succ G8, G9))))] (G27 -> (EXI [G28 ; (G27, G28) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] G28))) <: T0 ; G1 <: T0 ; G1 <: ((G68, G78) -> G79) ; G59 <: T3] (EXI [G81 ; ((G68, G78), G81) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18)))) ; (((G67, G68) -> G78) -> ((~zero @, G64) -> ~zero ((~succ G67, G68) -> G81))) <: G60 ; (ALL [G86 ; G86 <: (LFP G85 (EXI [G64 ; ((G68, G78), G81) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18)))) ; (ALL [G27 ; G27 <: (LFP G24 ((EXI [G23 G6] (~zero @, (G6 & G23))) | (EXI [G8 G9 ; (G8, G9) <: G24] (~succ G8, G9))))] (G27 -> (EXI [G28 ; (G27, G28) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] G28))) <: T0 ; (G1 | (ALL [G27 ; G27 <: (LFP G24 ((EXI [G23 G6] (~zero @, (G6 & G23))) | (EXI [G8 G9 ; (G8, G9) <: G24] (~succ G8, G9))))] (G27 -> (EXI [G28 ; (G27, G28) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] G28)))) <: T1 ; G1 <: T0 ; G29 <: T1 ; (G67, G68) <: G85 ; G1 <: ((G68, G78) -> G79)] (~zero @, G64)))] (G86 -> (EXI [G87 ; (G86, G87) <: (LFP G85 (EXI [G67 G68 G81 G64 ; ((G67, G68), G78) <: G85 ; ((G68, G78), G81) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18)))) ; (ALL [G27 ; G27 <: (LFP G24 ((EXI [G23 G6] (~zero @, (G6 & G23))) | (EXI [G8 G9 ; (G8, G9) <: G24] (~succ G8, G9))))] (G27 -> (EXI [G28 ; (G27, G28) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] G28))) <: T0 ; (G1 | (ALL [G27 ; G27 <: (LFP G24 ((EXI [G23 G6] (~zero @, (G6 & G23))) | (EXI [G8 G9 ; (G8, G9) <: G24] (~succ G8, G9))))] (G27 -> (EXI [G28 ; (G27, G28) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] G28)))) <: T1 ; G1 <: T0 ; G29 <: T1 ; G1 <: ((G68, G78) -> G79)] ((~zero @, G64), ~zero ((~succ G67, G68) -> G81))))] G87))) <: G59 ; (ALL [G86 ; G86 <: (LFP G85 (EXI [G64 ; ((G68, G78), G81) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18)))) ; (ALL [G27 ; G27 <: (LFP G24 ((EXI [G23 G6] (~zero @, (G6 & G23))) | (EXI [G8 G9 ; (G8, G9) <: G24] (~succ G8, G9))))] (G27 -> (EXI [G28 ; (G27, G28) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] G28))) <: T0 ; (G1 | (ALL [G27 ; G27 <: (LFP G24 ((EXI [G23 G6] (~zero @, (G6 & G23))) | (EXI [G8 G9 ; (G8, G9) <: G24] (~succ G8, G9))))] (G27 -> (EXI [G28 ; (G27, G28) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] G28)))) <: T1 ; G1 <: T0 ; G29 <: T1 ; (G67, G68) <: G85 ; G1 <: ((G68, G78) -> G79)] (~zero @, G64)))] (G86 -> (EXI [G87 ; (G86, G87) <: (LFP G85 (EXI [G67 G68 G81 G64 ; ((G67, G68), G78) <: G85 ; ((G68, G78), G81) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18)))) ; (ALL [G27 ; G27 <: (LFP G24 ((EXI [G23 G6] (~zero @, (G6 & G23))) | (EXI [G8 G9 ; (G8, G9) <: G24] (~succ G8, G9))))] (G27 -> (EXI [G28 ; (G27, G28) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] G28))) <: T0 ; (G1 | (ALL [G27 ; G27 <: (LFP G24 ((EXI [G23 G6] (~zero @, (G6 & G23))) | (EXI [G8 G9 ; (G8, G9) <: G24] (~succ G8, G9))))] (G27 -> (EXI [G28 ; (G27, G28) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] G28)))) <: T1 ; G1 <: T0 ; G29 <: T1 ; G1 <: ((G68, G78) -> G79)] ((~zero @, G64), ~zero ((~succ G67, G68) -> G81))))] G87))) <: T3] ((G1 | (ALL [G27 ; G27 <: (LFP G24 ((EXI [G23 G6] (~zero @, (G6 & G23))) | (EXI [G8 G9 ; (G8, G9) <: G24] (~succ G8, G9))))] (G27 -> (EXI [G28 ; (G27, G28) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] G28)))) | G29)))
<extra_id_0> (ALL [G67 G1 G59 G68 G78 G79 T3 T1 G60 T0 G29 G64 ; (G1 | (ALL [G27 ; G27 <: (LFP G24 ((EXI [G23 G6] (~zero @, (G6 & G23))) | (EXI [G8 G9 ; (G8, G9) <: G24] (~succ G8, G9))))] (G27 -> (EXI [G28 ; (G27, G28) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] G28)))) <: T1 ; G29 <: T1 ; G1 <: ((G68, G78) -> G79) ; G59 <: T3] (EXI [G81 ; ((G68, G78), G81) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18)))) ; (((G67, G68) -> G78) -> ((~zero @, G64) -> ~zero ((~succ G67, G68) -> G81))) <: G60 ; (ALL [G86 ; G86 <: (LFP G85 (EXI [G64 ; ((G68, G78), G81) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18)))) ; (ALL [G27 ; G27 <: (LFP G24 ((EXI [G23 G6] (~zero @, (G6 & G23))) | (EXI [G8 G9 ; (G8, G9) <: G24] (~succ G8, G9))))] (G27 -> (EXI [G28 ; (G27, G28) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] G28))) <: T0 ; (G1 | (ALL [G27 ; G27 <: (LFP G24 ((EXI [G23 G6] (~zero @, (G6 & G23))) | (EXI [G8 G9 ; (G8, G9) <: G24] (~succ G8, G9))))] (G27 -> (EXI [G28 ; (G27, G28) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] G28)))) <: T1 ; G1 <: T0 ; G29 <: T1 ; (G67, G68) <: G85 ; G1 <: ((G68, G78) -> G79)] (~zero @, G64)))] (G86 -> (EXI [G87 ; (G86, G87) <: (LFP G85 (EXI [G67 G68 G81 G64 ; ((G67, G68), G78) <: G85 ; ((G68, G78), G81) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18)))) ; (ALL [G27 ; G27 <: (LFP G24 ((EXI [G23 G6] (~zero @, (G6 & G23))) | (EXI [G8 G9 ; (G8, G9) <: G24] (~succ G8, G9))))] (G27 -> (EXI [G28 ; (G27, G28) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] G28))) <: T0 ; (G1 | (ALL [G27 ; G27 <: (LFP G24 ((EXI [G23 G6] (~zero @, (G6 & G23))) | (EXI [G8 G9 ; (G8, G9) <: G24] (~succ G8, G9))))] (G27 -> (EXI [G28 ; (G27, G28) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] G28)))) <: T1 ; G1 <: T0 ; G29 <: T1 ; G1 <: ((G68, G78) -> G79)] ((~zero @, G64), ~zero ((~succ G67, G68) -> G81))))] G87))) <: G59 ; (ALL [G86 ; G86 <: (LFP G85 (EXI [G64 ; ((G68, G78), G81) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18)))) ; (ALL [G27 ; G27 <: (LFP G24 ((EXI [G23 G6] (~zero @, (G6 & G23))) | (EXI [G8 G9 ; (G8, G9) <: G24] (~succ G8, G9))))] (G27 -> (EXI [G28 ; (G27, G28) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] G28))) <: T0 ; (G1 | (ALL [G27 ; G27 <: (LFP G24 ((EXI [G23 G6] (~zero @, (G6 & G23))) | (EXI [G8 G9 ; (G8, G9) <: G24] (~succ G8, G9))))] (G27 -> (EXI [G28 ; (G27, G28) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] G28)))) <: T1 ; G1 <: T0 ; G29 <: T1 ; (G67, G68) <: G85 ; G1 <: ((G68, G78) -> G79)] (~zero @, G64)))] (G86 -> (EXI [G87 ; (G86, G87) <: (LFP G85 (EXI [G67 G68 G81 G64 ; ((G67, G68), G78) <: G85 ; ((G68, G78), G81) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18)))) ; (ALL [G27 ; G27 <: (LFP G24 ((EXI [G23 G6] (~zero @, (G6 & G23))) | (EXI [G8 G9 ; (G8, G9) <: G24] (~succ G8, G9))))] (G27 -> (EXI [G28 ; (G27, G28) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] G28))) <: T0 ; (G1 | (ALL [G27 ; G27 <: (LFP G24 ((EXI [G23 G6] (~zero @, (G6 & G23))) | (EXI [G8 G9 ; (G8, G9) <: G24] (~succ G8, G9))))] (G27 -> (EXI [G28 ; (G27, G28) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] G28)))) <: T1 ; G1 <: T0 ; G29 <: T1 ; G1 <: ((G68, G78) -> G79)] ((~zero @, G64), ~zero ((~succ G67, G68) -> G81))))] G87))) <: T3] (G1 | (ALL [G27 ; G27 <: (LFP G24 ((EXI [G23 G6] (~zero @, (G6 & G23))) | (EXI [G8 G9 ; (G8, G9) <: G24] (~succ G8, G9))))] (G27 -> (EXI [G28 ; (G27, G28) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] G28))))))
<extra_id_2> (ALL [G39 G35 G38 G49 G31] (EXI [G52 ; (((G38, G39) -> G49) -> ((~zero @, G35) -> ~zero ((~succ G38, G39) -> G52))) <: G31 ; ((G39, G49), G52) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] (ALL [G57 ; G57 <: (LFP G56 (EXI [G35 ; ((G39, G49), G52) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18)))) ; (G38, G39) <: G56] (~zero @, G35)))] (G57 -> (EXI [G58 ; (G57, G58) <: (LFP G56 (EXI [G35 G39 G52 G38 ; ((G38, G39), G49) <: G56 ; ((G39, G49), G52) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] ((~zero @, G35), ~zero ((~succ G38, G39) -> G52))))] G58)))))

>>>>>>>>
    

<<<<<<<<
*** program ***
let add : <extra_id_0> = fix (case self => ( 
    case (~zero @, n) => n 
    case (~succ m, n) => ~succ (self(m, n))
)) ;
let suml : <extra_id_1> = fix (case self => ( 
    case (~nil @, b) => b
    case (~cons (x, xs), b) => self(xs, (add)(b, x))
)) ;
let sumr : <extra_id_2> = fix (case self => ( 
    case (~nil @, b) => b
    case (~cons (x, xs), b) => (add)((self)(xs, b), x)
)) ;
@

*** context ***
<<TODO>>

*** annotations ***
<extra_id_0> (ALL [G27 ; G27 <: (LFP G24 ((EXI [G23 G6] (~zero @, (G6 & G23))) | (EXI [G8 G9 ; (G8, G9) <: G24] (~succ G8, G9))))] (G27 -> (EXI [G28 ; (G27, G28) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] G28)))
<extra_id_1> (ALL [G36 G52 G30 G38 G51 G34 G37 G31 G49 ; (G31 -> ((ALL [G54 ; G54 <: G34] ((~nil @, G54) -> G54)) & (ALL [G53 ; G53 <: G34 ; ((G38, G36), G51) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18)))) ; G31 <: ((G37, G49) -> G52) ; G51 <: G49] ((~cons (G36, G37), G38) -> G52)))) <: G30] (ALL [G61 ; G61 <: (LFP G58 ((EXI [G34 G57] (~nil @, (G34 & G57))) | (EXI [G36 G38 G37 ; ((G38, G36), G51) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18)))) ; (G37, G51) <: G58] (~cons (G36, G37), G38))))] (G61 -> (EXI [G62 ; (G61, G62) <: (LFP G58 ((EXI [G34 G57] ((~nil @, (G34 & G57)), G57)) | (EXI [G36 G52 G38 G37 ; ((G38, G36), G51) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18)))) ; ((G37, G51), G52) <: G58] ((~cons (G36, G37), G38), G52))))] G62))))
<extra_id_2> (ALL [G68 G85 G72 G81 G70 G65 G71 G64 ; (G65 -> ((ALL [G87 ; G87 <: G68] ((~nil @, G87) -> G87)) & (ALL [G86 ; G86 <: G68 ; ((G81, G70), G85) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18)))) ; G65 <: ((G71, G72) -> G81)] ((~cons (G70, G71), G72) -> G85)))) <: G64] (ALL [G94 ; G94 <: (LFP G91 ((EXI [G90 G68] (~nil @, (G90 & G68))) | (EXI [G72 G70 G71 ; (G71, G72) <: G91 ; ((G81, G70), G85) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] (~cons (G70, G71), G72))))] (G94 -> (EXI [G95 ; (G94, G95) <: (LFP G91 ((EXI [G90 G68] ((~nil @, (G90 & G68)), G90)) | (EXI [G72 G85 G70 G71 ; ((G81, G70), G85) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18)))) ; ((G71, G72), G81) <: G91] ((~cons (G70, G71), G72), G85))))] G95))))

>>>>>>>>
    

<<<<<<<<
*** program ***
let add : <extra_id_0> = fix (case self => ( 
    case (~zero @, n) => n 
    case (~succ m, n) => ~succ (self(m, n))
)) ;
let fib : <extra_id_1> = fix (case self => ( 
    case (~zero @) => ~zero @
    case (~succ ~zero @) => ~succ ~zero @
    case (~succ ~succ n) => (add)((self)(~succ n), (self)(n))
)) ;
@

*** context ***
<<TODO>>

*** annotations ***
<extra_id_0> (ALL [G27 ; G27 <: (LFP G24 ((EXI [G23 G6] (~zero @, (G6 & G23))) | (EXI [G8 G9 ; (G8, G9) <: G24] (~succ G8, G9))))] (G27 -> (EXI [G28 ; (G27, G28) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18))))] G28)))
<extra_id_1> (ALL [G39 G30 G51 G55 G31 G47 G54 ; (G31 -> ((~zero @ -> ~zero @) & ((~succ ~zero @ -> ~succ ~zero @) & (ALL [ ; ((G47, G51), G54) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18)))) ; G31 <: (~succ G39 -> G47) ; G31 <: (G39 -> G51)] (~succ ~succ G39 -> G54))))) <: G30] (ALL [G59 ; G59 <: (LFP G58 (~zero @ | (~succ ~zero @ | (EXI [G39 ; ((G47, G51), G54) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18)))) ; G31 <: (~succ G39 -> G47) ; G55 <: (~succ G39 -> G47) ; G31 <: (G39 -> G51) ; G55 <: (G39 -> G51) ; G55 <: G31] ~succ ~succ G39))))] (G59 -> (EXI [G60 ; (G59, G60) <: (LFP G58 ((~zero @, ~zero @) | ((~succ ~zero @, ~succ ~zero @) | (EXI [G39 G54 ; ((G47, G51), G54) <: (LFP G24 ((EXI [G23 G6] ((~zero @, (G6 & G23)), G23)) | (EXI [G18 G8 G9 ; ((G8, G9), G18) <: G24] ((~succ G8, G9), ~succ G18)))) ; G31 <: (~succ G39 -> G47) ; G55 <: (~succ G39 -> G47) ; G31 <: (G39 -> G51) ; G55 <: (G39 -> G51) ; G55 <: G31] (~succ ~succ G39, G54)))))] G60))))

>>>>>>>>
    